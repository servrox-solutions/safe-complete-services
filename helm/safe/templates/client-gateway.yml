apiVersion: v1
kind: Service
metadata:
  name: client-gateway
  labels:
    service: client-gateway
spec:
  selector:
    app: client-gateway
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-gateway
  labels:
    service: client-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-gateway
  template:
    metadata:
      labels:
        app: client-gateway
    spec:
      containers:
        - name: gateway
          image: {{ .Values.client_gateway.image.name }}:{{ .Values.client_gateway.image.tag }}
          env:
            {{- with .Values.client_gateway }}
            - name: CONFIG_SERVICE_URI
              value: "https://{{ $.Values.config_service.hostname }}"
            - name: ROCKET_PORT
              value: "80"
            - name: ROCKET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: client-gateway
                  key: rocket-secret-key
            - name: WEBHOOK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: client-gateway
                  key: webhook-token
            - name: REDIS_URI
              value: redis://$(REDIS_MASTER_SERVICE_HOST):$(REDIS_MASTER_SERVICE_PORT)
            - name: REDIS_URI_MAINNET
              value: "$(REDIS_URI)"
            - name: EXCHANGE_API_BASE_URI
              value: {{ .exchange_api.base_uri | quote }}
            - name: EXCHANGE_API_KEY
              value: {{ .exchange_api.key | quote }}
            {{- end }}
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 300m
              memory: 400Mi
          ports:
            - name: http
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: http


---
apiVersion: v1
kind: Secret
metadata:
  name: client-gateway
  annotations:
    "helm.sh/resource-policy": keep
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "client-gateway") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $rocketSecretKey := (get $secretData "rocket-secret-key") | default (randAlphaNum 44 | b64enc | b64enc) }}
  rocket-secret-key: {{ $rocketSecretKey | quote }}
  {{- $webhookToken := (get $secretData "webhook-token") | default (randAlphaNum 44 | b64enc) }}
  webhook-token: {{ $webhookToken | quote }}
