# Generated by Django 3.2.9 on 2021-11-05 13:15
from django.apps.registry import Apps
from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations import RunPython


def copy_wallets(apps: Apps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    Wallet_Old = apps.get_model("chains", "Wallet")
    Wallet_New = apps.get_model("chains", "WalletNew")

    for wallet in Wallet_Old.objects.all():
        Wallet_New.objects.create(key=wallet.name)


class Migration(migrations.Migration):
    dependencies = [
        ("chains", "0032_feature"),
    ]

    operations = [
        # Create model with an auto generated id as primary key
        migrations.CreateModel(
            name="WalletNew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="The unique name/key that identifies this wallet",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "chains",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Chains where this wallet is enabled.",
                        to="chains.Chain",
                    ),
                ),
            ],
        ),
        # Copy existing wallets from Wallet model to the new model WalletNew
        migrations.RunPython(copy_wallets, RunPython.noop),
        # Delete the old model (Wallet)
        migrations.DeleteModel(name="Wallet"),
        # Rename the new model WalletNew to Wallet
        migrations.RenameModel(old_name="WalletNew", new_name="Wallet"),
    ]
