version: "3.3"

volumes:
  nginx-shared:
  transaction-nginx-shared:

services:
  config-nginx:
    image: nginx:1.20-alpine
    env_file:
      - ./safe-config-service/.dev.env
    ports:
      - "${NGINX_HOST_PORT:-8080}:80"
    volumes:
      - ./safe-config-service/nginx/templates:/etc/nginx/templates
      - nginx-shared:${DOCKER_NGINX_VOLUME_ROOT-/nginx}
    depends_on:
      - web
  db:
    image: postgres:13-alpine
    env_file:
      - ./safe-config-service/.dev.env
    volumes:
      - ./safe-config-service/data/db:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
  web:
    build: ./safe-config-service/
    tty: true
    volumes:
      - nginx-shared:${DOCKER_NGINX_VOLUME_ROOT:-/nginx}
    env_file:
      - ./safe-config-service/.dev.env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      - db

  # safe-client-gateway services
  nginx:
    image: nginx:1.21-alpine
    env_file:
      - ./safe-client-gateway/.dev.env
    ports:
      - "${NGINX_HOST_PORT:-8090}:80"
    volumes:
      - ./safe-client-gateway/nginx/templates:/etc/nginx/templates
    depends_on:
      - gateway-web

  gateway-web:
    build: ./safe-client-gateway/
    env_file:
      - ./safe-client-gateway/.dev.env
    depends_on:
      - redis

  redis:
    image: redis:6-alpine
    env_file:
      - ./safe-client-gateway/.dev.env
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    depends_on:
      - web

  # web-core
  #  ui:
  #    build: ./web-core/
  #    env_file:
  #      - ./web-core/.env.example
  #    ports:
  #      - "3000:3000"

  # safe-transaction-service
  transaction-nginx:
    image: nginx:alpine
    hostname: nginx # TODO?
    ports:
      - "8000:8000"
    volumes:
      - ./safe-transaction-service/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - transaction-nginx-shared:/nginx
    depends_on:
      - transaction-web

  transaction-redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    command:
      - --appendonly yes

  rabbitmq:
    image: rabbitmq:alpine

  transaction-db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  transaction-web:
    build:
      context: ./safe-transaction-service
      dockerfile: docker/web/Dockerfile
    env_file:
      - ./safe-transaction-service/.env.dev
    depends_on:
      - transaction-db
      - transaction-redis
    working_dir: /app
    ports:
      - "8888:8888"
    volumes:
      - transaction-nginx-shared:/nginx
    command: docker/web/run_web.sh

  indexer-worker: &worker
    build:
      context: ./safe-transaction-service
      dockerfile: docker/web/Dockerfile
    env_file:
      - ./safe-transaction-service/.env.dev
    environment:
      RUN_MIGRATIONS: 1
      WORKER_QUEUES: "default,indexing"
    depends_on:
      - transaction-db
      - transaction-redis
      - rabbitmq
    command: docker/web/celery/worker/run.sh

  contracts-tokens-worker:
    <<: *worker
    environment:
      WORKER_QUEUES: "contracts,tokens"

  notifications-webhooks-worker:
    <<: *worker
    environment:
      WORKER_QUEUES: "notifications,webhooks"

  scheduler:
    <<: *worker
    command: docker/web/celery/scheduler/run.sh

  flower:
    <<: *worker
    command: docker/web/celery/flower/run.sh
    ports:
      - "5555:5555"
